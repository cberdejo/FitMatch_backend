generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model comentario_review {
  comment_id           Int                    @id @default(autoincrement())
  review_id            Int
  user_id              Int
  content              String                 @db.Text
  timestamp            DateTime               @default(dbgenerated("(now())")) @db.Timestamp(0)
  reviews              reviews                @relation(fields: [review_id], references: [review_id], onDelete: Cascade, map: "comentario_review_ibfk_1")
  usuario              usuario                @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "comentario_review_ibfk_2")
  me_gusta_comentarios me_gusta_comentarios[]

  @@index([review_id], map: "review_id")
  @@index([user_id], map: "user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ejercicios {
  exercise_id               Int                         @id @default(autoincrement())
  name                      String?                     @db.VarChar(255)
  description               String?                     @db.Text
  ejercicios_con_detalles   ejercicios_con_detalles[]
  ejercicios_grupo_muscular ejercicios_grupo_muscular[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ejercicios_con_detalles {
  detailed_exercise_id    Int                     @id @default(autoincrement())
  exercise_id             Int
  session_id              Int
  notes                   String?                 @db.Text
  intensity               Int?
  target_sets             Int?
  target_reps             Int?
  target_time             DateTime?               @db.Date
  type                    String                  @db.VarChar(50)
  ejercicios              ejercicios              @relation(fields: [exercise_id], references: [exercise_id], onDelete: NoAction, onUpdate: NoAction, map: "ejercicios_con_detalles_ibfk_1")
  sesi_n_de_entrenamiento sesion_de_entrenamiento @relation(fields: [session_id], references: [session_id], onDelete: NoAction, onUpdate: NoAction, map: "ejercicios_con_detalles_ibfk_2")
  ejercicios_entrada      ejercicios_entrada[]

  @@index([exercise_id], map: "exercise_id")
  @@index([session_id], map: "session_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ejercicios_entrada {
  entry_exercise_id               Int                             @id @default(autoincrement())
  entry_session_id                Int
  detailed_exercise_id            Int
  notes                           String?                         @db.Text
  sesi_n_de_entrenamiento_entrada sesion_de_entrenamiento_entrada @relation(fields: [entry_session_id], references: [entry_session_id], onDelete: NoAction, onUpdate: NoAction, map: "ejercicios_entrada_ibfk_1")
  ejercicios_con_detalles         ejercicios_con_detalles         @relation(fields: [detailed_exercise_id], references: [detailed_exercise_id], onDelete: NoAction, onUpdate: NoAction, map: "ejercicios_entrada_ibfk_2")
  sets_ejercicios_entrada         sets_ejercicios_entrada[]

  @@index([detailed_exercise_id], map: "detailed_exercise_id")
  @@index([entry_session_id], map: "entry_session_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ejercicios_grupo_muscular {
  ejercicio_id   Int
  grupo_id       Int
  ejercicios     ejercicios     @relation(fields: [ejercicio_id], references: [exercise_id], onDelete: NoAction, onUpdate: NoAction, map: "ejercicios_grupo_muscular_ibfk_1")
  grupo_muscular grupo_muscular @relation(fields: [grupo_id], references: [grupo_id], onDelete: NoAction, onUpdate: NoAction, map: "ejercicios_grupo_muscular_ibfk_2")

  @@id([ejercicio_id, grupo_id])
  @@index([grupo_id], map: "grupo_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model grupo_muscular {
  grupo_id                  Int                         @id @default(autoincrement())
  nombre_grupo              String                      @db.VarChar(255)
  ejercicios_grupo_muscular ejercicios_grupo_muscular[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model perfil {
  profile_id Int       @id @default(autoincrement())
  rol        String    @default("") @db.VarChar(50)
  usuario    usuario[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model plantillas_de_entrenamiento {
  template_id             Int                       @id @default(autoincrement())
  user_id                 Int
  template_name           String?                   @db.VarChar(255)
  picture                 String?                   @db.VarChar(255)
  description             String?                   @db.Text
  public                  Boolean                   @default(false) @db.Bit(1)
  hidden                  Boolean                   @default(false) @db.Bit(1)
  etiquetas               etiquetas[]
  reviews                 reviews[]
  rutinas_guardadas       rutinas_guardadas[]
  sesion_de_entrenamiento sesion_de_entrenamiento[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model reviews {
  review_id                   Int                         @id @default(autoincrement())
  user_id                     Int
  template_id                 Int
  rating                      Float
  review_content              String                      @db.Text
  timestamp                   DateTime                    @default(dbgenerated("(now())")) @db.Timestamp(0)
  comentario_review           comentario_review[]
  me_gusta_reviews            me_gusta_reviews[]
  plantillas_de_entrenamiento plantillas_de_entrenamiento @relation(fields: [template_id], references: [template_id], onDelete: Cascade, map: "FK_reviews_plantillas_de_entrenamiento")
  usuario                     usuario                     @relation(fields: [user_id], references: [user_id], onDelete: Cascade, map: "FK_reviews_usuario")

  @@index([template_id], map: "FK_reviews_plantillas_de_entrenamiento")
  @@index([user_id], map: "FK_reviews_usuario")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sets_ejercicios_entrada {
  set_id             Int                 @id @default(autoincrement())
  entry_exercise_id  Int?
  set_order          Int?
  reps               Int?
  video              String?             @db.VarChar(255)
  time               DateTime?           @db.Date
  weight             Float?
  ejercicios_entrada ejercicios_entrada? @relation(fields: [entry_exercise_id], references: [entry_exercise_id], onDelete: NoAction, onUpdate: NoAction, map: "sets_ejercicios_entrada_ibfk_1")

  @@index([entry_exercise_id], map: "entry_exercise_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model usuario {
  user_id                                                          Int                               @id @default(autoincrement())
  username                                                         String                            @db.VarChar(255)
  email                                                            String                            @unique(map: "email") @db.VarChar(255)
  password                                                         String                            @db.VarChar(255)
  profile_picture                                                  String?                           @default("https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png") @db.VarChar(255)
  profile_id                                                       Int                               @default(2)
  birth                                                            DateTime?                         @default(dbgenerated("(now())")) @db.Date
  public                                                           Boolean                           @default(true) @db.Bit(1)
  comentario_review                                                comentario_review[]
  me_gusta_comentarios                                             me_gusta_comentarios[]
  me_gusta_reviews                                                 me_gusta_reviews[]
  reviews                                                          reviews[]
  rutinas_guardadas                                                rutinas_guardadas[]
  sesion_de_entrenamiento_entrada                                  sesion_de_entrenamiento_entrada[]
  perfil                                                           perfil                            @relation(fields: [profile_id], references: [profile_id], onDelete: Cascade, map: "FK_usuario_perfil")
  usuarios_bloqueados_usuarios_bloqueados_user_idTousuario         usuarios_bloqueados[]             @relation("usuarios_bloqueados_user_idTousuario")
  usuarios_bloqueados_usuarios_bloqueados_blocked_user_idTousuario usuarios_bloqueados[]             @relation("usuarios_bloqueados_blocked_user_idTousuario")

  @@index([profile_id], map: "FK_usuario_perfil")
}

model usuarios_bloqueados {
  block_id                                             Int      @id @default(autoincrement())
  user_id                                              Int?
  blocked_user_id                                      Int?
  usuario_usuarios_bloqueados_user_idTousuario         usuario? @relation("usuarios_bloqueados_user_idTousuario", fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "usuarios_bloqueados_ibfk_1")
  usuario_usuarios_bloqueados_blocked_user_idTousuario usuario? @relation("usuarios_bloqueados_blocked_user_idTousuario", fields: [blocked_user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "usuarios_bloqueados_ibfk_2")

  @@index([blocked_user_id], map: "blocked_user_id")
  @@index([user_id], map: "user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sesion_de_entrenamiento {
  session_id                      Int                               @id @default(autoincrement())
  template_id                     Int
  session_name                    String                            @db.VarChar(50)
  session_date                    DateTime                          @default(dbgenerated("(now())")) @db.Date
  notes                           String?                           @db.Text
  ejercicios_con_detalles         ejercicios_con_detalles[]
  plantillas_de_entrenamiento     plantillas_de_entrenamiento       @relation(fields: [template_id], references: [template_id], onDelete: NoAction, onUpdate: NoAction, map: "sesion_de_entrenamiento_ibfk_1")
  sesion_de_entrenamiento_entrada sesion_de_entrenamiento_entrada[]

  @@index([template_id], map: "template_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sesion_de_entrenamiento_entrada {
  entry_session_id        Int                      @id @default(autoincrement())
  session_id              Int?
  user_id                 Int?
  session_date            DateTime                 @default(dbgenerated("(now())")) @db.Date
  ejercicios_entrada      ejercicios_entrada[]
  usuario                 usuario?                 @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_sesion_de_entrenamiento_entrada_usuario")
  sesion_de_entrenamiento sesion_de_entrenamiento? @relation(fields: [session_id], references: [session_id], onDelete: NoAction, onUpdate: NoAction, map: "sesion_de_entrenamiento_entrada_ibfk_1")

  @@index([session_id], map: "session_id")
  @@index([user_id], map: "FK_sesion_de_entrenamiento_entrada_usuario")
}

model etiquetas {
  tag_id                      Int                         @id @default(autoincrement())
  template_id                 Int
  experience                  String?                     @db.VarChar(255)
  interests                   String?                     @db.VarChar(50)
  objectives                  String?                     @db.VarChar(50)
  equipment                   String?                     @db.VarChar(50)
  plantillas_de_entrenamiento plantillas_de_entrenamiento @relation(fields: [template_id], references: [template_id], onDelete: Cascade, map: "FK_emparejamiento_plantillas_de_entrenamiento")

  @@index([template_id], map: "FK_emparejamiento_plantillas_de_entrenamiento")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rutinas_guardadas {
  saved_id                    Int                         @id @default(autoincrement())
  user_id                     Int
  template_id                 Int
  plantillas_de_entrenamiento plantillas_de_entrenamiento @relation(fields: [template_id], references: [template_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_rutinas_guardadas_plantillas_de_entrenamiento")
  usuario                     usuario                     @relation(fields: [user_id], references: [user_id], onDelete: Cascade, map: "FK_rutinas_guardadas_usuario")

  @@index([template_id], map: "FK_rutinas_guardadas_plantillas_de_entrenamiento")
  @@index([user_id], map: "FK_rutinas_guardadas_usuario")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model me_gusta_comentarios {
  liked_comment_id  Int               @id @default(autoincrement())
  comment_id        Int
  user_id           Int
  comentario_review comentario_review @relation(fields: [comment_id], references: [comment_id], onDelete: Cascade, map: "FK_me_gusta_comentarios_comentario_review")
  usuario           usuario           @relation(fields: [user_id], references: [user_id], onDelete: Cascade, map: "me_gusta_comentarios_ibfk_2")

  @@unique([comment_id, user_id], map: "review_id_user_id")
  @@index([user_id], map: "user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model me_gusta_reviews {
  liked_review_id Int     @id @default(autoincrement())
  review_id       Int
  user_id         Int
  reviews         reviews @relation(fields: [review_id], references: [review_id], onDelete: Cascade, map: "FK_me_gusta_reviews_reviews")
  usuario         usuario @relation(fields: [user_id], references: [user_id], onDelete: Cascade, map: "me_gusta_reviews_ibfk_2")

  @@unique([review_id, user_id], map: "review_id_user_id")
  @@index([review_id], map: "review_id")
  @@index([user_id], map: "user_id")
}
